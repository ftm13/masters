(rule $ROOT ($Action) (JoinFn betaReduce forward (arg0 (lambda a (call wallToString (var a))))))
(rule $Action ($Set3) (JoinFn betaReduce forward (arg0 (lambda s (call context:removeTop (var s))))))
(rule $Action (tok) (ConstantFn (call context:sortStacks)))
(rule $Intermediate1 ($Set3) (JoinFn betaReduce forward (arg0 (lambda s (lambda c (call context:stackOnTop (var s) (var c)))))))
(rule $Action ($Intermediate1 $Color) (JoinFn forward betaReduce))
(rule $Set3 ($Set2) (IdentityFn))
(rule $Set3 ($Set1) (IdentityFn))
(rule $Set3 ($Set) (IdentityFn))
(rule $Color (tok) (ConstantFn (number 0 COLOR)))
(rule $Color (tok) (ConstantFn (number 1 COLOR)))
(rule $Color (tok) (ConstantFn (number 2 COLOR)))
(rule $Color (tok) (ConstantFn (number 3 COLOR)))
(rule $Count (tok) (ConstantFn (number 1 COUNT)))
(rule $Set (tok) (ConstantFn (call context:getNonEmpty)))
(rule $Set ($Color) (JoinFn betaReduce forward (arg0 (lambda c (call context:getTopColor (var c))))))
(rule $Set1 ($Set) (JoinFn betaReduce forward (arg0 (lambda s (call leftMost1 (var s))))))
(rule $Set1 ($Set) (JoinFn betaReduce forward (arg0 (lambda s (call rightMost1 (var s))))))
(rule $Set2 ($Set) (JoinFn betaReduce forward (arg0 (lambda s (call complement (var s))))))
(rule $Set2 ($Set1) (JoinFn betaReduce forward (arg0 (lambda s (call complement (var s))))))
